import java.util.Scanner;
import java.util.Random;

public class MasterMind {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        boolean playAgain = true;

        while (playAgain) {
            System.out.println("Witaj w grze MasterMind!");
            System.out.println("Zgadnij 4-cyfrowy kod składający się z liczb od 1 do 6.");
            System.out.println("Wybierz poziom trudności:");
            System.out.println("1. Łatwy (4 cyfry, liczby od 1 do 6)");
            System.out.println("2. Średni (5 cyfr, liczby od 1 do 8)");
            System.out.println("3. Trudny (6 cyfr, liczby od 1 do 9)");

            int codeLength = 4;
            int maxDigit = 6;
            int difficulty = 1;

            // Wybór poziomu trudności 
            while (true) {
                try {
                    System.out.print("Podaj numer poziomu trudności (1-3): ");
                    difficulty = Integer.parseInt(scanner.nextLine());

                    if (difficulty == 1) {
                        codeLength = 4;
                        maxDigit = 6;
                        break;
                    } else if (difficulty == 2) {
                        codeLength = 5;
                        maxDigit = 8;
                        break;
                    } else if (difficulty == 3) {
                        codeLength = 6;
                        maxDigit = 9;
                        break;
                    } else {
                        System.out.println("Nieprawidłowy wybór. Wybierz 1, 2 lub 3.");
                    }
                } catch (NumberFormatException e) {
                    System.out.println("Podaj prawidłową liczbę (1-3).");
                }
            }

            
            int[] secretCode = new int[codeLength];
            for (int i = 0; i < codeLength; i++) {
                secretCode[i] = random.nextInt(maxDigit) + 1;
            }

            boolean guessed = false;

    
            while (!guessed) {
                System.out.print("Wprowadź swoją próbę: ");
                String guess = scanner.nextLine();
                int[] userCode = new int[codeLength];

                try {
                    if (guess.length() != codeLength) {
                        throw new NumberFormatException();
                    }

                    for (int i = 0; i < codeLength; i++) {
                        userCode[i] = Character.getNumericValue(guess.charAt(i));
                        if (userCode[i] < 1 || userCode[i] > maxDigit) {
                            throw new NumberFormatException();
                        }
                    }

                    // Sprawdzanie poprawności kodu
                    int identicalAndInPlace = 0;
                    int identicalButNotInPlace = 0;
                    boolean[] countedInUserCode = new boolean[codeLength];
                    boolean[] countedInSecretCode = new boolean[codeLength];

                    // Liczba cyfr na właściwym miejscu
                    for (int i = 0; i < codeLength; i++) {
                        if (userCode[i] == secretCode[i]) {
                            identicalAndInPlace++;
                            countedInUserCode[i] = true;
                            countedInSecretCode[i] = true;
                        }
                    }

                    // Liczba cyfr poprawnych, ale nie na właściwym miejscu
                    for (int i = 0; i < codeLength; i++) {
                        if (!countedInUserCode[i]) {
                            for (int j = 0; j < codeLength; j++) {
                                if (!countedInSecretCode[j] && userCode[i] == secretCode[j]) {
                                    identicalButNotInPlace++;
                                    countedInUserCode[i] = true;
                                    countedInSecretCode[j] = true;
                                    break;
                                }
                            }
                        }
                    }

                    if (identicalAndInPlace == codeLength) {
                        System.out.println("Gratulacje - kod został odgadnięty!");
                        guessed = true;
                    } else {
                        System.out.println("Poprawne cyfry na poprawnych pozycjach: " + identicalAndInPlace);
                        System.out.println("Poprawne cyfry na niepoprawnych pozycjach: " + identicalButNotInPlace);
                    }

                } catch (NumberFormatException e) {
                    System.out.println("Nieprawidłowy format. Wprowadź dokładnie " + codeLength + " cyfry od 1 do " + maxDigit + ".");
                }
            }

            
            System.out.print("Sekretny kod to: ");
            for (int num : secretCode) {
                System.out.print(num);
            }
            System.out.println();

            // Zapytanie o nową grę
            System.out.print("Czy chcesz zagrać ponownie? (tak/nie): ");
            String response = scanner.nextLine().trim().toLowerCase();
            playAgain = response.equals("tak");
        }

        System.out.println("Dziękujemy za grę w MasterMind!");
        scanner.close();
    }
}
